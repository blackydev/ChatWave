version: "3.8"
services:
  config:
    build: config
    environment:
      CONFIG_PASSWORD: $CONFIG_PASSWORD
    ports:
      - "8888:8888"
    volumes:
      - ./config/target/config-0.0.1-SNAPSHOT.jar:/app.jar

  registry:
    build: registry
    environment:
      CONFIG_PASSWORD: $CONFIG_PASSWORD
    depends_on:
      config:
        condition: service_healthy
    ports:
      - "8761:8761"
    volumes:
      - ./registry/target/registry-0.0.1-SNAPSHOT.jar:/app.jar

  auth-service:
    build: auth-service
    environment:
      CONFIG_PASSWORD: $CONFIG_PASSWORD
      POSTGRES_PASSWORD: $AUTH_POSTGRES_PASSWORD
    depends_on:
      config:
        condition: service_healthy
      registry:
        condition: service_healthy
      auth-postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ./auth-service/target/auth-service-0.0.1-SNAPSHOT.jar:/app.jar

  auth-postgres:
    build: postgres
    environment:
      POSTGRES_PASSWORD: $AUTH_POSTGRES_PASSWORD
    ports:
      - "9081:5432"

  account-service:
    build: account-service
    environment:
      CONFIG_PASSWORD: $CONFIG_PASSWORD
      POSTGRES_PASSWORD: $ACCOUNT_POSTGRES_PASSWORD
    depends_on:
      config:
        condition: service_healthy
      registry:
        condition: service_healthy
      account-postgres:
        condition: service_healthy
    ports:
      - "8082:8082"
    volumes:
      - ./account-service/target/account-service-0.0.1-SNAPSHOT.jar:/app.jar

  account-postgres:
    build: postgres
    environment:
      POSTGRES_PASSWORD: $ACCOUNT_POSTGRES_PASSWORD
    ports:
      - "9082:5432"

  gateway:
    build: gateway
    environment:
      CONFIG_PASSWORD: $CONFIG_PASSWORD
    depends_on:
      config:
        condition: service_healthy
      registry:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/target/gateway-0.0.1-SNAPSHOT.jar:/app.jar
