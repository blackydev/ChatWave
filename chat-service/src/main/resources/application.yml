app.csrf.enabled: ${CSRF_ENABLED:true}

spring:
  application:
    name: chat-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_IP}:${POSTGRES_PORT:5432}/${POSTGRES_DB:postgres}
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        provider:
          microservices:
            issuer-uri: http://${AUTH_SERVICE_IP}:${AUTH_SERVICE_PORT:80}
            jwk-set-uri: http://${AUTH_SERVICE_IP}:${AUTH_SERVICE_PORT:80}/oauth2/jwks
        registration:
          microservices:
            client-id: chat-service
            client-secret: ${AUTH_SERVICE_PASSWORD}
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/spring"
            scope:
              - openid
              - server

  cloud:
    openfeign:
      oauth2:
        clientRegistrationId: microservices
        enabled: true

management:
  endpoint.health.probes.enabled: true
  health:
    livenessState.enabled: true
    readinessState.enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: http://${REGISTRY_IP}:${REGISTRY_PORT:8761}/eureka/
  instance:
    prefer-ip-address: true

server.port: 80
