spring:
  datasource:
    url: jdbc:postgresql://auth-postgres:5432/chatwave
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: ${POSTGRES_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      authorizationserver:
        client:
          account-client:
            registration:
              client-id: account-client
              # temporary solution, TODO: the client-secret will have to be replaced
              client-secret: {bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
              client-authentication-methods: client_secret_basic
              authorization-grant-types:
                - client_credentials
                - authorization_code
                - refresh_token
              redirect-uris: http://account-service:8082/login/oauth2/code/spring
              scopes:
                - openid
                - user.write
            token:
              access-token-time-to-live: 3600s

server:
  port: 8081
